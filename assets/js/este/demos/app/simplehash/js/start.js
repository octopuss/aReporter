// Generated by CoffeeScript 1.4.0
/**
  @fileoverview este.demos.app.simplehash.start.
*/

goog.provide('este.demos.app.simplehash.start');

goog.require('este.app.create');

goog.require('este.demos.app.simplehash.product.View');

goog.require('este.demos.app.simplehash.products.View');

goog.require('este.dev.Monitor.create');

/**
  @param {Object} data JSON from server
*/


este.demos.app.simplehash.start = function(data) {
  var appEl, myApp, progressEl, timer;
  if (goog.DEBUG) {
    este.dev.Monitor.create();
  }
  appEl = document.getElementById('app');
  progressEl = document.getElementById('progress');
  timer = null;
  myApp = este.app.create(appEl, [este.demos.app.simplehash.products.View, este.demos.app.simplehash.product.View], true);
  myApp.data = data;
  goog.events.listen(myApp, 'beforeload', function(e) {
    var _ref;
    goog.dom.classes.add(progressEl, 'loading');
    progressEl.innerHTML = 'loading';
    if ((_ref = e.request.params) != null ? _ref.id : void 0) {
      progressEl.innerHTML += ' ' + e.request.params.id;
    }
    clearInterval(timer);
    return timer = setInterval(function() {
      return progressEl.innerHTML += '.';
    }, 250);
  });
  goog.events.listen(myApp, 'beforeshow', function(e) {
    clearInterval(timer);
    goog.dom.classes.remove(progressEl, 'loading');
    return progressEl.innerHTML = 'loaded';
  });
  goog.events.listen(document.body, 'click', function(e) {
    if (e.target.id !== 'dispose') {
      return;
    }
    return myApp.dispose();
  });
  return myApp.start();
};

goog.exportSymbol('este.demos.app.simplehash.start', este.demos.app.simplehash.start);
