// Coffe Class fixed for Closure Compiler by Este.js
// Generated by CoffeeScript 1.4.0
/**
  @fileoverview este.App.
  todo: add docs and list of demos
*/



goog.provide('este.App');

goog.provide('este.App.Event');

goog.require('este.app.Layout');

goog.require('este.app.Request');

goog.require('este.app.View');

goog.require('este.Base');

goog.require('este.storage.Local');

goog.require('goog.events.Event');

goog.require('goog.result');

goog.require('goog.result.SimpleResult');



  

  /**
    @param {Array.<este.app.View>} views
    @param {este.app.Layout} layout
    @param {este.Router} router
    @constructor
    @extends {este.Base}
  */


  este.App = function(views, layout, router) {
    this.views = views;
    this.layout = layout;
    this.router = router;
    this.pendingRequests = [];
    este.App.superClass_.constructor.apply(this, arguments);
  }

  goog.inherits(este.App, este.Base);

  /**
    @enum {string}
  */


  este.App.EventType = {
    BEFORELOAD: 'beforeload',
    BEFORESHOW: 'beforeshow'
  };

  /**
    JSON from server.
    todo: wait for release new struct and dict annotations to enforce only
    bracket access.
    @type {Object}
  */


  este.App.prototype.data = null;

  /**
    @type {string}
  */


  este.App.prototype.localStorageNamespace = 'este-storage';

  /**
    @type {boolean}
  */


  este.App.prototype.urlEnabled = true;

  /**
    @type {Array.<este.app.View>}
    @protected
  */


  este.App.prototype.views = null;

  /**
    @type {este.app.Layout}
    @protected
  */


  este.App.prototype.layout = null;

  /**
    @type {este.Router}
    @protected
  */


  este.App.prototype.router = null;

  /**
    @type {Array.<este.app.Request>}
    @protected
  */


  este.App.prototype.pendingRequests = null;

  /**
    @type {este.storage.Local}
    @protected
  */


  este.App.prototype.localStorage = null;

  /**
    Start app.
  */


  este.App.prototype.start = function() {
    this.on(this, este.app.View.EventType.REDIRECT, this.onRedirect);
    this.localStorage = new este.storage.Local(this.localStorageNamespace);
    this.prepareViews();
    if (this.urlEnabled) {
      return this.startRouter();
    } else {
      return this.load(this.views[0]);
    }
  };

  /**
    @protected
  */


  este.App.prototype.prepareViews = function() {
    var view, _i, _len, _ref;
    _ref = this.views;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      view = _ref[_i];
      view.setParentEventTarget(this);
      view.localStorage = this.localStorage;
      view.html5historyEnabled = this.router.isHtml5historyEnabled();
    }
  };

  /**
    @param {este.app.View} view
    @param {Object=} params
    @param {boolean=} isNavigation
    @protected
  */


  este.App.prototype.load = function(view, params, isNavigation) {
    var request, result,
      _this = this;
    request = new este.app.Request(view, params, isNavigation);
    this.dispatchAppEvent(este.App.EventType.BEFORELOAD, request);
    this.pendingRequests.push(request);
    result = view.load(params);
    return goog.result.waitOnSuccess(result, function() {
      return _this.onViewLoad(request);
    });
  };

  /**
    @param {este.app.Request} request
    @protected
  */


  este.App.prototype.onViewLoad = function(request) {
    if (!goog.array.contains(this.pendingRequests, request)) {
      return;
    }
    if (!goog.array.peek(this.pendingRequests).equal(request)) {
      return;
    }
    this.clearPendingRequests();
    this.dispatchAppEvent(este.App.EventType.BEFORESHOW, request);
    if (this.urlEnabled && request.view.url && !request.silent) {
      this.router.pathNavigate(request.view.url, request.params, true);
    }
    return this.layout.show(request.view, request.params);
  };

  /**
    @protected
  */


  este.App.prototype.startRouter = function() {
    var view, _i, _len, _ref;
    _ref = this.views;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      view = _ref[_i];
      if (!view.url) {
        continue;
      }
      this.router.add(view.url, goog.bind(this.onRouteMatch, this, view));
    }
    this.router.silentTapHandler = true;
    return this.router.start();
  };

  /**
    @param {este.app.View} view
    @param {Object=} params
    @param {boolean=} isNavigation
    @protected
  */


  este.App.prototype.onRouteMatch = function(view, params, isNavigation) {
    return this.load(view, params, isNavigation);
  };

  /**
    @param {este.app.view.Event} e
    @protected
  */


  este.App.prototype.onRedirect = function(e) {
    var view;
    view = this.findView(e.viewClass);
    if (!view) {
      return;
    }
    return this.load(view, e.params);
  };

  /**
    @param {function(new:este.app.View)} viewClass
    @return {este.app.View}
    @protected
  */


  este.App.prototype.findView = function(viewClass) {
    var view, _i, _len, _ref;
    _ref = this.views;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      view = _ref[_i];
      if (view instanceof viewClass) {
        return view;
      }
    }
    return null;
  };

  /**
    @param {este.App.EventType} type
    @param {este.app.Request} request
    @protected
  */


  este.App.prototype.dispatchAppEvent = function(type, request) {
    var e;
    e = new este.App.Event(type, request);
    return this.dispatchEvent(e);
  };

  /**
    @protected
  */


  este.App.prototype.clearPendingRequests = function() {
    return this.pendingRequests.length = 0;
  };

  /**
    @inheritDoc
  */


  este.App.prototype.disposeInternal = function() {
    var view, _i, _len, _ref;
    this.clearPendingRequests();
    _ref = this.views;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      view = _ref[_i];
      view.dispose();
    }
    this.layout.dispose();
    this.router.dispose();
    este.App.superClass_.disposeInternal.apply(this, arguments);
  };

  



  

  /**
    @param {este.App.EventType} type
    @param {este.app.Request} request
    @constructor
    @extends {goog.events.Event}
  */


  este.App.Event = function(type, request) {
    this.request = request;
    este.App.Event.superClass_.constructor.call(this, type);
  }

  goog.inherits(este.App.Event, goog.events.Event);

  /**
    @type {este.app.Request}
  */


  este.App.Event.prototype.request = null;

  
