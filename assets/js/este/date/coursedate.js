// Generated by CoffeeScript 1.4.0
/**
  @fileoverview
*/

goog.provide('este.date.courseDate');

goog.provide('este.date.courseDate.create');

goog.require('goog.date.Date');

goog.scope(function() {
  var _ = este.date.courseDate;

  /**
    @param {number} nth
    @param {number} dayOfWeek
    @return {string}
  */
  _.create = function(nth, dayOfWeek) {
    return _.compute(nth, dayOfWeek, new goog.date.Date);
  };
  /**
    @param {number} nth 1-4
    @param {number} dayOfWeek 0-6, 0 is sunday
    @param {!goog.date.Date} date
    @return {string}
  */

  _.compute = function(nth, dayOfWeek, date) {
    var courseDate, day, month;
    courseDate = _.setNthDayInMonth(nth, dayOfWeek, date);
    if (goog.date.Date.compare(courseDate, date) <= 0) {
      courseDate.setMonth(courseDate.getMonth() + 1);
      courseDate = _.setNthDayInMonth(nth, dayOfWeek, courseDate);
    }
    day = courseDate.getDate();
    month = courseDate.getMonth();
    return "" + day + ". až " + (day + 1) + ". " + (_.getCzechMonth(month));
  };
  /**
    @param {number} nth 1-4
    @param {number} dayOfWeek 0-6, 0 is sunday
    @param {goog.date.Date} date
    @return {!goog.date.Date}
  */

  _.setNthDayInMonth = function(nth, dayOfWeek, date) {
    var day;
    date = date.clone();
    day = 1;
    while (true) {
      date.setDate(day);
      if (date.getWeekday() === dayOfWeek) {
        nth--;
      }
      if (!nth || day > 31) {
        break;
      }
      day++;
    }
    return date;
  };
  /**
    @param {number} month 0 - 11
    @return {string}
  */

  _.getCzechMonth = function(month) {
    switch (month) {
      case 0:
        return 'ledna';
      case 1:
        return 'února';
      case 2:
        return 'března';
      case 3:
        return 'dubna';
      case 4:
        return 'května';
      case 5:
        return 'června';
      case 6:
        return 'července';
      case 7:
        return 'srpna';
      case 8:
        return 'září';
      case 9:
        return 'října';
      case 10:
        return 'listopadu';
      default:
        return 'prosince';
    }
  };
});
