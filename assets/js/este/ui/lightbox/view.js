// Coffe Class fixed for Closure Compiler by Este.js
// Generated by CoffeeScript 1.4.0
/*
	@fileoverview este.ui.lightbox.View.
*/



goog.provide('este.ui.lightbox.View');

goog.provide('este.ui.lightbox.View.create');

goog.require('goog.ui.Component');

goog.require('goog.events.KeyCodes');



  

  /**
  		@param {Element} currentAnchor
  		@param {Array.<Element>} anchors
  		@constructor
  		@extends {goog.ui.Component}
  */


  este.ui.lightbox.View = function(currentAnchor, anchors) {
    this.currentAnchor = currentAnchor;
    this.anchors = anchors;
    este.ui.lightbox.View.superClass_.constructor.call(this);
  }

  goog.inherits(este.ui.lightbox.View, goog.ui.Component);

  /**
  		Factory method.
  		@param {Element} currentAnchor
  		@param {Array.<Element>} anchors
  */


  este.ui.lightbox.View.create = function(currentAnchor, anchors) {
    return new este.ui.lightbox.View(currentAnchor, anchors);
  };

  /**
  		@type {Element}
  */


  este.ui.lightbox.View.prototype.currentAnchor = null;

  /**
  		@type {Array.<Element>}
  */


  este.ui.lightbox.View.prototype.anchors = null;

  /**
  		@inheritDoc
  */


  este.ui.lightbox.View.prototype.createDom = function() {
    este.ui.lightbox.View.superClass_.createDom.call(this);
    this.getElement().className = 'e-ui-lightbox';
    this.updateInternal();
  };

  /**
  		@protected
  */


  este.ui.lightbox.View.prototype.updateInternal = function() {
    var currentAnchorIdx, firstDisabled, imageSrc, secondDisabled, title, totalAnchorsCount;
    imageSrc = this.currentAnchor.href;
    title = this.currentAnchor.title;
    firstDisabled = secondDisabled = '';
    currentAnchorIdx = goog.array.indexOf(this.anchors, this.currentAnchor);
    totalAnchorsCount = this.anchors.length;
    if (this.currentAnchor === this.anchors[0]) {
      firstDisabled = ' e-ui-lightbox-disabled';
    }
    if (this.currentAnchor === this.anchors[totalAnchorsCount - 1]) {
      secondDisabled = ' e-ui-lightbox-disabled';
    }
    return this.getElement().innerHTML = "			<div class='e-ui-lightbox-background'></div>			<div class='e-ui-lightbox-content'>				<div class='e-ui-lightbox-image-wrapper'>					<img class='e-ui-lightbox-image' src='" + imageSrc + "'>					<div class='e-ui-lightbox-title'>" + title + "</div>				</div>			</div>			<div class='e-ui-lightbox-sidebar'>				<button class='e-ui-lightbox-previous" + firstDisabled + "'>previous</button>				<button class='e-ui-lightbox-next" + secondDisabled + "'>next</button>				<div class='e-ui-lightbox-numbers'>					<span class='e-ui-lightbox-current'>" + (currentAnchorIdx + 1) + "</span>/					<span class='e-ui-lightbox-total'>" + totalAnchorsCount + "</span>				</div>				<button class='e-ui-lightbox-close'>close</button>			</div>";
  };

  /**
  		@inheritDoc
  */


  este.ui.lightbox.View.prototype.enterDocument = function() {
    este.ui.lightbox.View.superClass_.enterDocument.call(this);
    this.getHandler().listen(this.getElement(), 'click', this.onClick).listen(this.dom_.getDocument(), 'keydown', this.onDocumentKeydown);
  };

  /**
  		@param {goog.events.BrowserEvent} e
  		@protected
  */


  este.ui.lightbox.View.prototype.onClick = function(e) {
    switch (e.target.className) {
      case 'e-ui-lightbox-previous':
        return this.moveToNextImage(false);
      case 'e-ui-lightbox-next':
        return this.moveToNextImage(true);
      case 'e-ui-lightbox-close':
        return this.dispatchCloseEvent();
    }
  };

  /**
  		@param {goog.events.BrowserEvent} e
  		@protected
  */


  este.ui.lightbox.View.prototype.onDocumentKeydown = function(e) {
    switch (e.keyCode) {
      case goog.events.KeyCodes.ESC:
        return this.dispatchCloseEvent();
      case goog.events.KeyCodes.RIGHT:
      case goog.events.KeyCodes.DOWN:
        return this.moveToNextImage(true);
      case goog.events.KeyCodes.LEFT:
      case goog.events.KeyCodes.UP:
        return this.moveToNextImage(false);
    }
  };

  /**
  		@param {boolean} next
  		@protected
  */


  este.ui.lightbox.View.prototype.moveToNextImage = function(next) {
    this.setNextCurrentAnchor(next);
    return this.updateInternal();
  };

  /**
  		@param {boolean} next
  		@protected
  */


  este.ui.lightbox.View.prototype.setNextCurrentAnchor = function(next) {
    var anchor, idx;
    idx = goog.array.indexOf(this.anchors, this.currentAnchor);
    if (next) {
      idx++;
    } else {
      idx--;
    }
    anchor = this.anchors[idx];
    if (!anchor) {
      return;
    }
    return this.currentAnchor = anchor;
  };

  /**
  		@protected
  */


  este.ui.lightbox.View.prototype.dispatchCloseEvent = function() {
    return this.dispatchEvent('close');
  };

  
